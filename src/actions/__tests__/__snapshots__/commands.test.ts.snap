// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`commands actions should handle /close 1`] = `
Object {
  "route": Object {
    "bufferKey": "#channel",
    "serverKey": "serverKey",
  },
  "type": "UI/CLOSE_WINDOW",
}
`;

exports[`commands actions should handle /help 1`] = `
Object {
  "payload": Object {
    "commands": Object {
      "close": Object {
        "callback": [Function],
        "description": "Closes the current window",
        "regexp": /\\\\s\\*/,
        "syntax": "",
      },
      "connect": Object {
        "callback": [Function],
        "description": "Connects to a server",
        "regexp": /\\^\\(\\?:\\(-n\\)\\\\s\\+\\)\\?\\(\\\\S\\+\\)\\(\\?:\\\\s\\+\\(\\\\d\\{1,5\\}\\)\\?\\)\\?\\$/,
        "syntax": "[-n] <host> [port]",
      },
      "disconnect": Object {
        "callback": [Function],
        "description": "Disconnects from the current server",
        "regexp": /\\^\\(\\.\\*\\)\\$/,
        "syntax": "[quit message]",
      },
      "help": Object {
        "callback": [Function],
        "description": "Prints help about available commands",
        "regexp": /\\^\\(\\\\S\\+\\)\\?\\$/,
        "syntax": "[command]",
      },
      "join": Object {
        "callback": [Function],
        "description": "Joins a channel",
        "regexp": /\\^\\(\\[&\\|#\\|\\\\\\+\\|!\\]\\\\S\\+\\)\\$/,
        "syntax": "<channel>",
      },
      "msg": Object {
        "callback": [Function],
        "description": "Sends a message to a channel or a nick",
        "regexp": /\\^\\(\\\\S\\+\\)\\\\s\\+\\(\\.\\+\\)\\$/,
        "syntax": "<channel or nick> <text>",
      },
      "nick": Object {
        "callback": [Function],
        "description": "Changes the current nick",
        "regexp": /\\^\\(\\\\S\\+\\)\\$/,
        "syntax": "<nick>",
      },
      "part": Object {
        "callback": [Function],
        "description": "Leaves the channel",
        "regexp": /\\^\\(\\\\S\\+\\)\\(\\?:\\\\s\\+\\(\\.\\+\\)\\)\\?\\$/,
        "syntax": "<channel> [text]",
      },
      "ping": Object {
        "callback": [Function],
        "description": "Sends a ping",
        "regexp": /\\\\s\\*/,
        "syntax": "",
      },
      "quit": Object {
        "callback": [Function],
        "description": "Disconnects from the current server",
        "regexp": /\\^\\(\\.\\*\\)\\$/,
        "syntax": "[quit message]",
      },
      "quote": Object {
        "callback": [Function],
        "description": "Sends a raw message",
        "regexp": /\\^\\(\\.\\+\\)\\$/,
        "syntax": "<raw message>",
      },
      "raw": Object {
        "callback": [Function],
        "description": "Sends a raw message",
        "regexp": /\\^\\(\\.\\+\\)\\$/,
        "syntax": "<raw message>",
      },
      "server": Object {
        "callback": [Function],
        "description": "Connects to a server",
        "regexp": /\\^\\(\\?:\\(-n\\)\\\\s\\+\\)\\?\\(\\\\S\\+\\)\\(\\?:\\\\s\\+\\(\\\\d\\{1,5\\}\\)\\?\\)\\?\\$/,
        "syntax": "[-n] <host> [port]",
      },
    },
  },
  "route": Object {
    "bufferKey": "@status",
    "serverKey": "serverKey",
  },
  "type": "COMMAND/PRINT_HELP_BY_DEFAULT",
}
`;

exports[`commands actions should handle /help with given command 1`] = `
Object {
  "payload": Object {
    "command": Object {
      "callback": [Function],
      "description": "Sends a message to a channel or a nick",
      "name": "msg",
      "regexp": /\\^\\(\\\\S\\+\\)\\\\s\\+\\(\\.\\+\\)\\$/,
      "syntax": "<channel or nick> <text>",
    },
  },
  "route": Object {
    "bufferKey": "@active",
    "serverKey": "serverKey",
  },
  "type": "COMMAND/PRINT_HELP_ABOUT_COMMAND",
}
`;

exports[`commands actions should handle /join 1`] = `
Object {
  "payload": Object {
    "raw": "JOIN #channel",
  },
  "route": Object {
    "bufferKey": "@none",
    "serverKey": "serverKey",
  },
  "type": "SOCKET/SEND_RAW_MESSAGE",
}
`;

exports[`commands actions should handle /msg 1`] = `
Object {
  "embeddedAction": Object {
    "payload": Object {
      "text": "hello",
    },
    "route": Object {
      "bufferKey": "#channel",
      "serverKey": "serverKey",
    },
    "type": "MESSAGE/SEND_PRIVMSG",
  },
  "payload": Object {
    "raw": "PRIVMSG #channel hello",
  },
  "route": Object {
    "bufferKey": "@none",
    "serverKey": "serverKey",
  },
  "type": "SOCKET/SEND_RAW_MESSAGE",
}
`;

exports[`commands actions should handle /nick 1`] = `
Object {
  "payload": Object {
    "raw": "NICK new_nick",
  },
  "route": Object {
    "bufferKey": "@none",
    "serverKey": "serverKey",
  },
  "type": "SOCKET/SEND_RAW_MESSAGE",
}
`;

exports[`commands actions should handle /part 1`] = `
Object {
  "payload": Object {
    "raw": "PART #channel Goodbye!",
  },
  "route": Object {
    "bufferKey": "@none",
    "serverKey": "serverKey",
  },
  "type": "SOCKET/SEND_RAW_MESSAGE",
}
`;

exports[`commands actions should handle /ping 1`] = `
Object {
  "embeddedAction": Object {
    "payload": Object {
      "key": 1536211245164,
    },
    "route": Object {
      "bufferKey": "@status",
      "serverKey": "serverKey",
    },
    "type": "MESSAGE/SEND_PING_TO_SERVER",
  },
  "payload": Object {
    "raw": "PING 1536211245164",
  },
  "route": Object {
    "bufferKey": "@none",
    "serverKey": "serverKey",
  },
  "type": "SOCKET/SEND_RAW_MESSAGE",
}
`;

exports[`commands actions should handle /quit 1`] = `
Object {
  "payload": Object {
    "quitMessage": "Goodbye!",
  },
  "route": Object {
    "bufferKey": "@none",
    "serverKey": "serverKey",
  },
  "type": "SOCKET/DISCONNECT_FROM_SERVER",
}
`;

exports[`commands actions should handle /raw 1`] = `
Object {
  "payload": Object {
    "raw": "PRIVMSG #channel :hello world",
  },
  "route": Object {
    "bufferKey": "@none",
    "serverKey": "serverKey",
  },
  "type": "SOCKET/SEND_RAW_MESSAGE",
}
`;

exports[`commands actions should handle /server -n 1`] = `
Object {
  "payload": Object {
    "host": "6667",
    "newConnection": false,
    "port": 6667,
  },
  "route": Object {
    "bufferKey": "@status",
    "serverKey": "serverKey",
  },
  "type": "SOCKET/CONNECT_TO_SERVER",
}
`;

exports[`commands actions should handle /server 1`] = `
Object {
  "payload": Object {
    "host": "irc.network",
    "newConnection": true,
    "port": 6667,
  },
  "route": Object {
    "bufferKey": "@status",
    "serverKey": "serverKey",
  },
  "type": "SOCKET/CONNECT_TO_SERVER",
}
`;
