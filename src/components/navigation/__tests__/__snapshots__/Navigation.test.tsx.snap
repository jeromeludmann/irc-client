// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Navigation component should render correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Navigation
    onChannelButtonClick={[MockFunction]}
    servers={
      Object {
        "server1": Object {
          "channels": Object {
            "#channel": Object {
              "activity": true,
              "input": Object {
                "dirtyValue": "",
                "history": Object {
                  "index": 2,
                  "values": Array [
                    "/connect -n localhost",
                    "/connect localhost",
                  ],
                },
                "value": "",
              },
              "messages": Array [],
            },
            "@raw": Object {
              "activity": false,
              "input": Object {
                "dirtyValue": "",
                "history": Object {
                  "index": 2,
                  "values": Array [
                    "/connect -n localhost",
                    "/connect localhost",
                  ],
                },
                "value": "",
              },
              "messages": Array [],
            },
            "@status": Object {
              "activity": false,
              "input": Object {
                "dirtyValue": "",
                "history": Object {
                  "index": 2,
                  "values": Array [
                    "/connect -n localhost",
                    "/connect localhost",
                  ],
                },
                "value": "",
              },
              "messages": Array [],
            },
          },
          "name": "server.domain",
        },
      }
    }
    window={
      Object {
        "channelKey": "@status",
        "serverKey": "server1",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <styled.ul>
          <styled.li>
            <styled.button
              data-channel-key="@raw"
              data-server-key="server1"
              hasActivity={false}
              isActive={false}
              onClick={[Function]}
            >
              server1
            </styled.button>
          </styled.li>
          <styled.li>
            <styled.button
              data-channel-key="@status"
              data-server-key="server1"
              hasActivity={false}
              isActive={true}
              onClick={[Function]}
            >
              server.domain
            </styled.button>
          </styled.li>
          <styled.li>
            <styled.button
              data-channel-key="#channel"
              data-server-key="server1"
              hasActivity={true}
              isActive={false}
              onClick={[Function]}
            >
              #channel
            </styled.button>
          </styled.li>
        </styled.ul>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": "server1",
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <styled.li>
              <styled.button
                data-channel-key="@raw"
                data-server-key="server1"
                hasActivity={false}
                isActive={false}
                onClick={[Function]}
              >
                server1
              </styled.button>
            </styled.li>,
            <styled.li>
              <styled.button
                data-channel-key="@status"
                data-server-key="server1"
                hasActivity={false}
                isActive={true}
                onClick={[Function]}
              >
                server.domain
              </styled.button>
            </styled.li>,
            <styled.li>
              <styled.button
                data-channel-key="#channel"
                data-server-key="server1"
                hasActivity={true}
                isActive={false}
                onClick={[Function]}
              >
                #channel
              </styled.button>
            </styled.li>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": "@raw",
            "nodeType": "class",
            "props": Object {
              "children": <styled.button
                data-channel-key="@raw"
                data-server-key="server1"
                hasActivity={false}
                isActive={false}
                onClick={[Function]}
              >
                server1
              </styled.button>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "server1",
                "data-channel-key": "@raw",
                "data-server-key": "server1",
                "hasActivity": false,
                "isActive": false,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "server1",
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": "@status",
            "nodeType": "class",
            "props": Object {
              "children": <styled.button
                data-channel-key="@status"
                data-server-key="server1"
                hasActivity={false}
                isActive={true}
                onClick={[Function]}
              >
                server.domain
              </styled.button>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "server.domain",
                "data-channel-key": "@status",
                "data-server-key": "server1",
                "hasActivity": false,
                "isActive": true,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "server.domain",
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": "#channel",
            "nodeType": "class",
            "props": Object {
              "children": <styled.button
                data-channel-key="#channel"
                data-server-key="server1"
                hasActivity={true}
                isActive={false}
                onClick={[Function]}
              >
                #channel
              </styled.button>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "#channel",
                "data-channel-key": "#channel",
                "data-server-key": "server1",
                "hasActivity": true,
                "isActive": false,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "#channel",
              "type": [Function],
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <styled.ul>
            <styled.li>
              <styled.button
                data-channel-key="@raw"
                data-server-key="server1"
                hasActivity={false}
                isActive={false}
                onClick={[Function]}
              >
                server1
              </styled.button>
            </styled.li>
            <styled.li>
              <styled.button
                data-channel-key="@status"
                data-server-key="server1"
                hasActivity={false}
                isActive={true}
                onClick={[Function]}
              >
                server.domain
              </styled.button>
            </styled.li>
            <styled.li>
              <styled.button
                data-channel-key="#channel"
                data-server-key="server1"
                hasActivity={true}
                isActive={false}
                onClick={[Function]}
              >
                #channel
              </styled.button>
            </styled.li>
          </styled.ul>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": "server1",
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <styled.li>
                <styled.button
                  data-channel-key="@raw"
                  data-server-key="server1"
                  hasActivity={false}
                  isActive={false}
                  onClick={[Function]}
                >
                  server1
                </styled.button>
              </styled.li>,
              <styled.li>
                <styled.button
                  data-channel-key="@status"
                  data-server-key="server1"
                  hasActivity={false}
                  isActive={true}
                  onClick={[Function]}
                >
                  server.domain
                </styled.button>
              </styled.li>,
              <styled.li>
                <styled.button
                  data-channel-key="#channel"
                  data-server-key="server1"
                  hasActivity={true}
                  isActive={false}
                  onClick={[Function]}
                >
                  #channel
                </styled.button>
              </styled.li>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": "@raw",
              "nodeType": "class",
              "props": Object {
                "children": <styled.button
                  data-channel-key="@raw"
                  data-server-key="server1"
                  hasActivity={false}
                  isActive={false}
                  onClick={[Function]}
                >
                  server1
                </styled.button>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "server1",
                  "data-channel-key": "@raw",
                  "data-server-key": "server1",
                  "hasActivity": false,
                  "isActive": false,
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": "server1",
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": "@status",
              "nodeType": "class",
              "props": Object {
                "children": <styled.button
                  data-channel-key="@status"
                  data-server-key="server1"
                  hasActivity={false}
                  isActive={true}
                  onClick={[Function]}
                >
                  server.domain
                </styled.button>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "server.domain",
                  "data-channel-key": "@status",
                  "data-server-key": "server1",
                  "hasActivity": false,
                  "isActive": true,
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": "server.domain",
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": "#channel",
              "nodeType": "class",
              "props": Object {
                "children": <styled.button
                  data-channel-key="#channel"
                  data-server-key="server1"
                  hasActivity={true}
                  isActive={false}
                  onClick={[Function]}
                >
                  #channel
                </styled.button>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "#channel",
                  "data-channel-key": "#channel",
                  "data-server-key": "server1",
                  "hasActivity": true,
                  "isActive": false,
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": "#channel",
                "type": [Function],
              },
              "type": [Function],
            },
          ],
          "type": [Function],
        },
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
